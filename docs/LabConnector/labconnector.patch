Index: application/Bootstrap.php
===================================================================
36a37,40
>  *
>  * @author Herbert Yeung
>  * @date 13th July 2010
>  * Modification: Added the namespace for LabConnector.
72c76
< 
---
>     
79a84
>         $autoloader->registerNamespace('Labconnector_');
Index: application/controllers/IndexController.php
===================================================================
65,67c65,71
<             /******************************************************************
<              ** TODO Add your authentication.                                **
<              ******************************************************************/
---
>             $auth = new Sahara_Auth($username, $password);
>             if (!$auth->authenticate())
>             {
>                  $this->view->messages = array("Authentication failure.");
>                  return;
>             }
>             $auth->setupSession();
Index: application/controllers/QueueController.php
===================================================================
36a37,42
>  * 
>  * @author Herbert Yeung
>  * @date 17th June 2010
>  * Modification: Added extra check for RIG Permission TYPE as 'ILABS'. If so, don't add it.
>  * Another solution is to add conditional above 'if (!array_key_exists($p->userClass->userClassName, $userClasses))'
>  * but this would have impacted if a user group was associated with multiple permissions. 
88,102c94,112
<             /* Load up resource information. */
<             $resource = array(
<                 'resourceClass' => $p->resourceClass,     // The resource class so either 'RIG', 'TYPE' or 'CAPS'
<                 'resource' => $p->resource->resourceName, // The resource name
<                 'locked' => $perm->isLocked,              // Whether the permission is locked
<                 'active' => Sahara_DateTimeUtil::isBeforeNow($p->start) && // Whether the permission is active
<                             Sahara_DateTimeUtil::isAfterNow($p->expiry),
<                 'id' => 'permission' . $p->permissionID,  // An ID to hook to a dialog
<                 'start' => $p->start,                     // Start time of the resource
<                 'expiry' => $p->expiry,                   // Expiry time of the resource
<                 'permissionId' => $p->permissionID,       // Permission ID
<                 'display' => isset($p->displayName) ? $p->displayName : $p->resource->resourceName // Display name
<             );
< 
<             array_push($userClasses[$p->userClass->userClassName], $resource);
---
>             /* Extra check for iLabs experment of rig type ILABS. */
>             if($p->resource->resourceName != 'ILABS')
>             {
> 	            /* Load up resource information. */
> 	            $resource = array(
> 	                'resourceClass' => $p->resourceClass,     // The resource class so either 'RIG', 'TYPE' or 'CAPS'
> 	                'resource' => $p->resource->resourceName, // The resource name
> 	                'locked' => $perm->isLocked,              // Whether the permission is locked
> 	                'active' => Sahara_DateTimeUtil::isBeforeNow($p->start) && // Whether the permission is active
> 	                            Sahara_DateTimeUtil::isAfterNow($p->expiry),
> 	                'id' => 'permission' . $p->permissionID,  // An ID to hook to a dialog
> 	                'start' => $p->start,                     // Start time of the resource
> 	                'expiry' => $p->expiry,                   // Expiry time of the resource
> 	                'permissionId' => $p->permissionID,       // Permission ID
> 	                'display' => isset($p->displayName) ? $p->displayName : $p->resource->resourceName // Display name
> 	            );
> 				
> 	            array_push($userClasses[$p->userClass->userClassName], $resource);
>             }
Index: application/configs/config.ini
===================================================================
1,94c1,107
< 	[production]
< 
< ; The institution namespace
< institution = UTS
< 
< ; Scheduling Server hostname and port name
< SchedulingServer.hostname = localhost
< SchedulingServer.port = 8080
< 
< ; Logger level (FATAL | ERROR | WARN | INFO | DEBUG)
< logger.level = WARN
< logger.filename = C:/Program Files/Sahara/WI/webinterface.log
< 
< ; Display Information
< ; Header Infomation
< header.logoGraphic = /uts/images/uts.png
< header.logoLink = http://www.uts.edu.au/ 
< ; header.nameImage = /images/Sahara.png
< ; header.background = /uts/images/sand_again2.png
< 
< ; Queue callback interval (seconds, default is 60)
< queue.interval = 30
< ; Session callback interval (seconds, default is 60)
< session.interval = 30
< 
< ; Camera format strings
< camera.jpeg = http://<HOST>:<PORT>/stream<NUM>.jpg
< camera.mms = mms://<HOST>:<PORT>/stream<NUM>_v_medium.asf
< camera.mmsh = mmsh://<HOST>:<PORT>/stream<NUM>_v_medium.asf
< camera.httpasf = http://<HOST>:<PORT>/stream<NUM>.asf
< 
< ; Camera format descriptions
< cameradesc.httpasf = WMV Format
< 
< ; Remote Desktop domain
< remotedesktop.domain = REMOTELABS
< 
< ; Feedback email address(s). To set more than one address
< ; append '[]' to the property name.
< feedback.address[] = mdiponio@eng.uts.edu.au
< feedback.address[] = tmachet@eng.uts.edu.au
< 
< ; Host name of SMTP server to send email to.
< email.smtp = postoffice.example.au
< ; Information to be shown on the from field of emails.
< email.from.address = donotreply@example.au
< email.from.name = Sahara
< 
< ; Whether the WSDL file obtained from the Scheduling Server should be cached.
< ; The default is to cache the wSDL.
< SOAP.cacheWSDL = true
< ; Whether to use the WSDL address when requesting to service, or use the
< ; base address the WSDL was obtained from. The default value is to not
< ; use the WSDL provided location.
< SOAP.useWSDLLocation = false
< ; SOAP Request timeout. After this time is elapsed an error is thrown.
< ; The default is to not set a timeout.
< ; SOAP.requestTimeout = 20
< 
< ; Primitive default content-type
< primitive.file.mime = text/csv
< 
< ;;; NOTE: The following parameters relate to using the Sahara_Auth pluggable
< ;;; authentication system.
< 
< ; Database configuration
< database.adapter = Pdo_Mysql
< database.params.host = 127.0.0.1
< database.params.dbname = sahara
< database.params.username = sahara
< database.params.password = saharapasswd
< 
< ; LDAP connection parameters
< ; ldap.params.host = 138.25.47.106
< ; ldap.params.username = "cn=Directory Manager"
< ; ldap.params.password = dmpasswd
< ; ldap.params.baseDn = "o=UTS"
< 
< ; Authentication configuration
< ; auth.type[] = Database
< ; auth.type[] = Ldap
< ; auth.session[] = SaharaAccount{Ldap}
< ; auth.session[] = LdapPermission{Ldap}
< 
< ; LDAP auth required attributes and values
< ; auth.ldap.objectclass = utsperson
< 
< ; LDAP permissions
< ; session.ldappermission.rule[] = "utsaccounttype=Staff{Physical Modelling}"
< ; session.ldappermission.rule[] = "objectclass=utsperson{Dynamics and Control}"
< 
< [development : production]
< 
< logger.level = DEBUG
---
> [production]
> 
> ; The institution namespace
> institution = UTS
> 
> ; Scheduling Server hostname and port name
> SchedulingServer.hostname = localhost
> SchedulingServer.port = 8080
> 
> ; Logger level (FATAL | ERROR | WARN | INFO | DEBUG)
> logger.level = WARN
> logger.filename = /var/www/sahara/public/webinterface.log
> 
> ; Display Information
> ; Header Infomation
> header.logoGraphic = /uts/images/uts.png
> header.logoLink = http://www.uts.edu.au/ 
> ; header.nameImage = /images/Sahara.png
> ; header.background = /uts/images/sand_again2.png
> 
> ; Queue callback interval (seconds, default is 60)
> queue.interval = 30
> ; Session callback interval (seconds, default is 60)
> session.interval = 30
> 
> ; Camera format strings
> camera.jpeg = http://<HOST>:<PORT>/stream<NUM>.jpg
> camera.rcjpeg = /primitive/file/pc/FileTransferController/pa/binaryFile/tf/base64/filename/<FILE>
> camera.mms = mms://<HOST>:<PORT>/stream<NUM>_v_medium.asf
> camera.mmsh = mmsh://<HOST>:<PORT>/stream<NUM>_v_medium.asf
> camera.httpasf = http://<HOST>:<PORT>/stream<NUM>.asf
> 
> ; Camera format descriptions
> cameradesc.httpasf = WMV Format
> 
> ; Remote Desktop domain
> remotedesktop.domain = REMOTELABS
> 
> ; Feedback email address(s). To set more than one address
> ; append '[]' to the property name.
> feedback.address[] = mdiponio@eng.uts.edu.au
> cameradesc.rcjpeg = Rig Client Cam
> feedback.address[] = tmachet@eng.uts.edu.au
> 
> ; Host name of SMTP server to send email to.
> email.smtp = postoffice.example.au
> ; Information to be shown on the from field of emails.
> email.from.address = donotreply@example.au
> email.from.name = Sahara
> 
> ; Whether the WSDL file obtained from the Scheduling Server should be cached.
> ; The default is to cache the wSDL.
> SOAP.cacheWSDL = true
> ; Whether to use the WSDL address when requesting to service, or use the
> ; base address the WSDL was obtained from. The default value is to not
> ; use the WSDL provided location.
> SOAP.useWSDLLocation = false
> ; SOAP Request timeout. After this time is elapsed an error is thrown.
> ; The default is to not set a timeout.
> ; SOAP.requestTimeout = 20
> 
> ; Primitive default content-type
> primitive.file.mime = text/csv
> 
> ;;; NOTE: The following parameters relate to using the Sahara_Auth pluggable
> ;;; authentication system.
> 
> ; Database configuration
> database.adapter = Pdo_Mysql
> database.params.host = 127.0.0.1
> database.params.dbname = sahara
> database.params.username = sahara
> database.params.password = saharapasswd
> 
> ; LDAP connection parameters
> ; ldap.params.host = 138.25.47.106
> ; ldap.params.username = "cn=Directory Manager"
> ; ldap.params.password = dmpasswd
> ; ldap.params.baseDn = "o=UTS"
> 
> ; Authentication configuration
> ; auth.type[] = Database
> ; auth.type[] = Ldap
> ; auth.session[] = SaharaAccount{Ldap}
> ; auth.session[] = LdapPermission{Ldap}
> 
> ; LDAP auth required attributes and values
> ; auth.ldap.objectclass = utsperson
> 
> ; LDAP permissions
> ; session.ldappermission.rule[] = "utsaccounttype=Staff{Physical Modelling}"
> ; session.ldappermission.rule[] = "objectclass=utsperson{Dynamics and Control}"
> 
> [development : production]
> 
> ; LabConnector Experiment Storage root directory
> experiment.storage.dir = /home/saharausrs
>  
> ;Database for user password information
> db.adapter = PDO_MYSQL
> db.params.host = localhost
> db.params.username = sahara
> db.params.password = saharapasswdaustria101
> db.params.dbname = sahara
> db.params.port = 3306
> 
> logger.level = DEBUG
Index: application/views/layouts/_navbar.phtml
===================================================================
36a37,41
>  * 
>  * @author Herbert Yeung
>  * @date  17th June 2010
>  * Modification: Added a menu item for Sahara User titled 'LabConnector' which maps
>  * to LabConnectorController->indexAction()
43c48,49
<             'Rig Selection' => array('controller' => 'queue', 'action' => 'index')
---
>             'Rig Selection' => array('controller' => 'queue', 'action' => 'index'),
>         	'LabConnector'  => array('controller' => 'labconnector', 'action' => 'index') //Adding LabConnectorController mapped to indexAction()
Index: library/Sahara/Acl.php
===================================================================
36a37,40
>  * 
>  * @author Herbert Yeung
>  * @date  17th June 2010
>  * Modification: Added permission so that a user can access the LabConnector and index pages
75c79,80
<                                   				  'delete', 'deletesession')
---
>                                   				  'delete', 'deletesession'),
>                                   'labconnector' => array('index', 'error', 'experiment', 'results', 'refreshresults', 'submitexperiment')
184c189
< }
\ No newline at end of file
---
> }
Index: library/Sahara/Soap.php
===================================================================
36a37,40
>  * 
>  * @author Herbert Yeung
>  * @date  25th May 2010
>  * Modification: Added SOAP interface to access SchedServer-LabConnector bundle
52c56,59
< 
---
>     
>     /** The bundle containing the LabConnector SOAP interface in the Scheduling Server. */
>     const LABCONNECTOR_SERVICE_BUNDLE = 'SchedulingServer-LabConnector';
>     
180a188,205
>      * Gets a Sahara_Soap instance which points to the LabConnector interface
>      * of the Scheduling Server.
>      *
>      * @return Sahara_Soap instance
>      * @throws Exception if failed contacting Scheduling Server
>      */
>     public static function getSchedServerLabConnectorClient()
>     {
>         if (!Zend_Registry::isRegistered(self::LABCONNECTOR_SERVICE_BUNDLE))
>         {
>             Zend_Registry::set(self::LABCONNECTOR_SERVICE_BUNDLE,
>                     self::createSchedServerClient('LabConnector', self::LABCONNECTOR_SERVICE_BUNDLE));
>         }
>         return Zend_Registry::get(self::LABCONNECTOR_SERVICE_BUNDLE);
>     }
> 
> 
>     /**
Index: docs/LabConnector/labconnector.patch
===================================================================
171c171
< > 	[production]
---
> > [production]
263a264,265
> > [development : production]
> > 
275,276d276
< > [development : production]
< > 
343,606d342
< 75,76c75,169
< < 12c12
< < < logger.filename = /home/mdiponio/workspace/WI/webinterface.log
< ---
< > 1,94c1,107
< > < 	[production]
< > < 
< > < ; The institution namespace
< > < institution = UTS
< > < 
< > < ; Scheduling Server hostname and port name
< > < SchedulingServer.hostname = localhost
< > < SchedulingServer.port = 8080
< > < 
< > < ; Logger level (FATAL | ERROR | WARN | INFO | DEBUG)
< > < logger.level = WARN
< > < logger.filename = C:/Program Files/Sahara/WI/webinterface.log
< > < 
< > < ; Display Information
< > < ; Header Infomation
< > < header.logoGraphic = /uts/images/uts.png
< > < header.logoLink = http://www.uts.edu.au/ 
< > < ; header.nameImage = /images/Sahara.png
< > < ; header.background = /uts/images/sand_again2.png
< > < 
< > < ; Queue callback interval (seconds, default is 60)
< > < queue.interval = 30
< > < ; Session callback interval (seconds, default is 60)
< > < session.interval = 30
< > < 
< > < ; Camera format strings
< > < camera.jpeg = http://<HOST>:<PORT>/stream<NUM>.jpg
< > < camera.mms = mms://<HOST>:<PORT>/stream<NUM>_v_medium.asf
< > < camera.mmsh = mmsh://<HOST>:<PORT>/stream<NUM>_v_medium.asf
< > < camera.httpasf = http://<HOST>:<PORT>/stream<NUM>.asf
< > < 
< > < ; Camera format descriptions
< > < cameradesc.httpasf = WMV Format
< > < 
< > < ; Remote Desktop domain
< > < remotedesktop.domain = REMOTELABS
< > < 
< > < ; Feedback email address(s). To set more than one address
< > < ; append '[]' to the property name.
< > < feedback.address[] = mdiponio@eng.uts.edu.au
< > < feedback.address[] = tmachet@eng.uts.edu.au
< > < 
< > < ; Host name of SMTP server to send email to.
< > < email.smtp = postoffice.example.au
< > < ; Information to be shown on the from field of emails.
< > < email.from.address = donotreply@example.au
< > < email.from.name = Sahara
< > < 
< > < ; Whether the WSDL file obtained from the Scheduling Server should be cached.
< > < ; The default is to cache the wSDL.
< > < SOAP.cacheWSDL = true
< > < ; Whether to use the WSDL address when requesting to service, or use the
< > < ; base address the WSDL was obtained from. The default value is to not
< > < ; use the WSDL provided location.
< > < SOAP.useWSDLLocation = false
< > < ; SOAP Request timeout. After this time is elapsed an error is thrown.
< > < ; The default is to not set a timeout.
< > < ; SOAP.requestTimeout = 20
< > < 
< > < ; Primitive default content-type
< > < primitive.file.mime = text/csv
< > < 
< > < ;;; NOTE: The following parameters relate to using the Sahara_Auth pluggable
< > < ;;; authentication system.
< > < 
< > < ; Database configuration
< > < database.adapter = Pdo_Mysql
< > < database.params.host = 127.0.0.1
< > < database.params.dbname = sahara
< > < database.params.username = sahara
< > < database.params.password = saharapasswd
< > < 
< > < ; LDAP connection parameters
< > < ; ldap.params.host = 138.25.47.106
< > < ; ldap.params.username = "cn=Directory Manager"
< > < ; ldap.params.password = dmpasswd
< > < ; ldap.params.baseDn = "o=UTS"
< > < 
< > < ; Authentication configuration
< > < ; auth.type[] = Database
< > < ; auth.type[] = Ldap
< > < ; auth.session[] = SaharaAccount{Ldap}
< > < ; auth.session[] = LdapPermission{Ldap}
< > < 
< > < ; LDAP auth required attributes and values
< > < ; auth.ldap.objectclass = utsperson
< > < 
< > < ; LDAP permissions
< > < ; session.ldappermission.rule[] = "utsaccounttype=Staff{Physical Modelling}"
< > < ; session.ldappermission.rule[] = "objectclass=utsperson{Dynamics and Control}"
< > < 
< > < [development : production]
< > < 
< > < logger.level = DEBUG
< 77a171,181
< > > 	[production]
< > > 
< > > ; The institution namespace
< > > institution = UTS
< > > 
< > > ; Scheduling Server hostname and port name
< > > SchedulingServer.hostname = localhost
< > > SchedulingServer.port = 8080
< > > 
< > > ; Logger level (FATAL | ERROR | WARN | INFO | DEBUG)
< > > logger.level = WARN
< 79,81c183,197
< < 38c38
< < < 
< < ---
< ---
< > > 
< > > ; Display Information
< > > ; Header Infomation
< > > header.logoGraphic = /uts/images/uts.png
< > > header.logoLink = http://www.uts.edu.au/ 
< > > ; header.nameImage = /images/Sahara.png
< > > ; header.background = /uts/images/sand_again2.png
< > > 
< > > ; Queue callback interval (seconds, default is 60)
< > > queue.interval = 30
< > > ; Session callback interval (seconds, default is 60)
< > > session.interval = 30
< > > 
< > > ; Camera format strings
< > > camera.jpeg = http://<HOST>:<PORT>/stream<NUM>.jpg
< 83c199,211
< < 40a41
< ---
< > > camera.mms = mms://<HOST>:<PORT>/stream<NUM>_v_medium.asf
< > > camera.mmsh = mmsh://<HOST>:<PORT>/stream<NUM>_v_medium.asf
< > > camera.httpasf = http://<HOST>:<PORT>/stream<NUM>.asf
< > > 
< > > ; Camera format descriptions
< > > cameradesc.httpasf = WMV Format
< > > 
< > > ; Remote Desktop domain
< > > remotedesktop.domain = REMOTELABS
< > > 
< > > ; Feedback email address(s). To set more than one address
< > > ; append '[]' to the property name.
< > > feedback.address[] = mdiponio@eng.uts.edu.au
< 85,111c213,263
< < 70,94c71,80
< < < ; Database configuration
< < < database.adapter = Pdo_Mysql
< < < database.params.host = 127.0.0.1
< < < database.params.dbname = sahara
< < < database.params.username = sahara
< < < database.params.password = saharapasswd
< < < 
< < < ; LDAP connection parameters
< < < ldap.params.host = 138.25.47.106
< < < ldap.params.username = "cn=Directory Manager"
< < < ldap.params.password = dmpasswd
< < < ldap.params.baseDn = "o=UTS"
< < < 
< < < ; Authentication configuration
< < < auth.type[] = Database
< < < auth.type[] = Ldap
< < < ;auth.session[] = SaharaAccount{Ldap}
< < < auth.session[] = LdapPermission{Ldap}
< < < 
< < < ; LDAP auth required attributes and values
< < < auth.ldap.objectclass = utsperson
< < < 
< < < ; LDAP permissions
< < < session.ldappermission.rule[] = "utsaccounttype=Staff{Physical Modelling}"
< < < session.ldappermission.rule[] = "objectclass=utsperson{Dynamics and Control}"
< < ---
< ---
< > > feedback.address[] = tmachet@eng.uts.edu.au
< > > 
< > > ; Host name of SMTP server to send email to.
< > > email.smtp = postoffice.example.au
< > > ; Information to be shown on the from field of emails.
< > > email.from.address = donotreply@example.au
< > > email.from.name = Sahara
< > > 
< > > ; Whether the WSDL file obtained from the Scheduling Server should be cached.
< > > ; The default is to cache the wSDL.
< > > SOAP.cacheWSDL = true
< > > ; Whether to use the WSDL address when requesting to service, or use the
< > > ; base address the WSDL was obtained from. The default value is to not
< > > ; use the WSDL provided location.
< > > SOAP.useWSDLLocation = false
< > > ; SOAP Request timeout. After this time is elapsed an error is thrown.
< > > ; The default is to not set a timeout.
< > > ; SOAP.requestTimeout = 20
< > > 
< > > ; Primitive default content-type
< > > primitive.file.mime = text/csv
< > > 
< > > ;;; NOTE: The following parameters relate to using the Sahara_Auth pluggable
< > > ;;; authentication system.
< > > 
< > > ; Database configuration
< > > database.adapter = Pdo_Mysql
< > > database.params.host = 127.0.0.1
< > > database.params.dbname = sahara
< > > database.params.username = sahara
< > > database.params.password = saharapasswd
< > > 
< > > ; LDAP connection parameters
< > > ; ldap.params.host = 138.25.47.106
< > > ; ldap.params.username = "cn=Directory Manager"
< > > ; ldap.params.password = dmpasswd
< > > ; ldap.params.baseDn = "o=UTS"
< > > 
< > > ; Authentication configuration
< > > ; auth.type[] = Database
< > > ; auth.type[] = Ldap
< > > ; auth.session[] = SaharaAccount{Ldap}
< > > ; auth.session[] = LdapPermission{Ldap}
< > > 
< > > ; LDAP auth required attributes and values
< > > ; auth.ldap.objectclass = utsperson
< > > 
< > > ; LDAP permissions
< > > ; session.ldappermission.rule[] = "utsaccounttype=Staff{Physical Modelling}"
< > > ; session.ldappermission.rule[] = "objectclass=utsperson{Dynamics and Control}"
< > > 
< 114c266
< < > 
< ---
< > >  
< 121a274,277
< > > 
< > > [development : production]
< > > 
< > > logger.level = DEBUG
< 142,143c298,305
< < 72c76,77
< < <                                   'primitive' => array('json', 'echo', 'file')
< ---
< > 75c79,80
< > <                                   				  'delete', 'deletesession')
< > ---
< > >                                   				  'delete', 'deletesession'),
< > >                                   'labconnector' => array('index', 'error', 'experiment', 'results', 'refreshresults', 'submitexperiment')
< > 184c189
< > < }
< > \ No newline at end of file
< 145,146c307
< < >                                   'primitive' => array('json', 'echo', 'file'),
< < >     							  'labconnector' => array('index', 'error', 'experiment', 'results', 'refreshresults', 'submitexperiment')
< ---
< > > }
< 180c341
< < Index: public/js/elements/cameras/cameras.js
< ---
< > Index: docs/LabConnector/labconnector.patch
< 182,183d342
< < 59a60
< < > 	case 'rcjpeg':
< Index: public/js/elements/cameras/cameras.js
< ===================================================================
< 59a60
< > 	case 'rcjpeg':
Index: public/js/elements/cameras/cameras.js
===================================================================
59a60
> 	case 'rcjpeg':
