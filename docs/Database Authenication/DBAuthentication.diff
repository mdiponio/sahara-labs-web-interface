Index: application/configs/config.ini
===================================================================
--- application/configs/config.ini	(revision 820)
+++ application/configs/config.ini	(working copy)
@@ -53,6 +53,14 @@
 ; By default it is cached.
 SOAP.cacheWSDL = false
 
+;Database for user password information
+db.adapter = PDO_MYSQL
+db.params.host = localhost
+db.params.username = authuser
+db.params.password = auth1
+db.params.dbname = sahara
+db.params.port = 3306
+
 [development : production]
 
 logger.level = DEBUG
Index: application/controllers/IndexController.php
===================================================================
--- application/controllers/IndexController.php	(revision 820)
+++ application/controllers/IndexController.php	(working copy)
@@ -55,6 +55,11 @@
         $form = new Sahara_Auth_Form();
         $this->view->form = $form;
 
+        // Configure database and store to the registry.
+        $db = Zend_Db::factory($this->_config->db);
+        Zend_Db_Table_Abstract::setDefaultAdapter($db);
+        Zend_Registry::set('db', $db);
+
         if ($this->_request->isPost() && $form->isValid($this->_request->getParams()))
         {
             Zend_Session::regenerateId();
@@ -65,14 +70,23 @@
             /******************************************************************
              ** TODO Add your authentication.                                **
              ******************************************************************/
-
+            $adapter = new Zend_Auth_Adapter_DbTable(Zend_Registry::get('db'),
+									'users',		// Contact table
+									'name', 		// Column containing identity
+									'password', // Column containing credential
+									'SHA1(?)');
+            
+			$adapter->setIdentity($username);
+			$adapter->setCredential($password);
+					
+			$result = $this->_auth->authenticate($adapter);
+            
             /* Store the authentication information. */
             $qName =  $inst . ':' . $username;
             $storage = $this->_auth->getStorage();
             $storage->clear();
             $storage->write($qName);
 
-
             $user = Sahara_Soap::getSchedServerPermissionsClient()->getUser(array('userQName' => $qName));
             if ($user->persona == 'NOTFOUND')
             {
@@ -81,22 +95,36 @@
                  **************************************************************/
             }
 
-            /* Redirect to an appropriate page. */
-            switch ($user->persona)
-            {
-                case Sahara_Acl::USER:
-                    $this->_redirectTo('index', 'queue');
-                    break;
-                case Sahara_Acl::ACADEMIC:
-                    $this->_redirectTo('index', 'academic');
-                    break;
-                case Sahara_Acl::ADMIN:
-                    $this->_redirectTo('index', 'admin');
-                    break;
-                default:
-                    $this->view->messages = array("Unknown user \"$qName\".");
-                    break;
-            }
+			switch ($result->getCode())
+			{	
+				case Zend_Auth_Result::SUCCESS:
+		            /* Redirect to an appropriate page. */
+		            switch ($user->persona)
+		            {
+		                case Sahara_Acl::USER:
+		                    $this->_redirectTo('index', 'queue');
+		                    break;
+		                case Sahara_Acl::ACADEMIC:
+		                    $this->_redirectTo('index', 'academic');
+		                    break;
+		                case Sahara_Acl::ADMIN:
+		                    $this->_redirectTo('index', 'admin');
+		                    break;
+		                default:
+		                    $this->view->messages = array("Unknown user \"$qName\".");
+		                    break;
+		            }
+		       	case Zend_Auth_Result::FAILURE_IDENTITY_NOT_FOUND:
+		            $this->view->messages = array("Incorrect user name/or and password \"$qName\".");
+					break;
+				case Zend_Auth_Result::FAILURE_CREDENTIAL_INVALID:
+	             	$this->view->messages = array("Incorrect password for user \"$qName\".");
+					break;
+				default:
+	             	$this->view->messages = array("Authentication failure.");
+					break;
+			}		
+		            
         }
     }
 
